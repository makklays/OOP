<?php
/**
 * ПРИНЦИПЫ ООП - OOP PRINCIPLES
 *
 * Инкапсуляция - Encapsulation
 * 
 * Мы не знаем, что в коде функции или класcе - они для нас как капсула, 
 * но мы знаем, что они возращают и для чего их использовать. Например ф-ции php: in_array($needle,$haystack[,$strict=FALSE]):bool
 * — Проверяет, присутствует ли в массиве значение, но мы не знаем как она это делает.
 * 
 * Полиморфизм - Polymorphism
 * 
 * "Один интерфейс - много реализаций". 
 * Полиморфизмом в ООП называют способность класов с одинаковой спецификацией (интерфейсом) определять различную реализацию,
 * что в свою очередь, позволяет клиентскому коду абстрагироваться от этой самой реализации
 * и работать с класом исходя из его спецификации.
 * В некоторых ООП языках используется т.н. "утиная типизация":
 * Напрмер использование класса c методом behavior вместо конструктора с указанием типа интерфейса передаваемой в метод переменной.
 * 
 * Наследование - Inheritance
 *
 * Наследование в OOП в PHP реализуется использованием слова extends, где класс наследуется от другого класса.
 * В php класс может наследовать только один класc. При наследовании он также наследует ф-ции и свойства от наследуемого класса.
 */
?>


