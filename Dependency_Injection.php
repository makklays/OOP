<?php
/**
 * ВНЕДРЕНИЕ ЗАВИСИМОСТИ - DEPENDENCY INJECTION 
 * 
 * Плохая практика - жестко создавать объект прямо в конструкторе класса. 
 * Класс Cache может меняться, требовать каких-то новых параметров в конструкторе, так что наше "жесткое связывание" 
 * пагубно скажется на поддержке кода.
 * Вместо создания объекта другого класса в конструкторе лучше передавать этот объект в параметрах конструктора, вот так:
 */
 
Class Rabota 
{
    protected $earn;
    public function __constructor(Cache $cache) // лучше передавать объект в параметрах конструктора - Dependency Injection
    {
        // $this->earn = new Cache(); - не использовать 
        $this->earn = $cache;
    }
}

// В целом, внедрение зависимости можно проводить через конструктор (Constructor injection), как в коде выше
// или через сеттер (Setter injection) ниже

Class Job
{
    protected $earn;
    public function setEarn(Salary $salary) // передается объект Salary - Dependency Injection 
    {
        $this->earn = $salary;
    }
}

// Все современные фрейворки используют этот не хитрый паттерн проектирования.
// Больше всего он используется в Symfonу.
